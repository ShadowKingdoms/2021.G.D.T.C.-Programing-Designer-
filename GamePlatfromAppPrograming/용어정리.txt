절차지향프로그래밍(C,DX)
WindowsPrograming - WinAPI,
콜백함수: 
함수:
배열:
포인터:
함수와 포인터: Call By Value, Call by Reffence
배열과 포인터: 인덱스접근
함수포인터: 콜백함수

객체지향프로그래밍 - 언어(C++,C#,Java) API(MFC, Winform) 엔진(Unity, Unreal)
클래스의 설계:
객체지향언어의 특징: 캡슐화,은닉,상속,다형성
클래스:
객체:
인스턴스:
정적멤버:
디자인패턴: 싱글톤, 데코레이터, 옵저버, 스테이트
싱글톤: 정적멤버
데코레이터: 상속,계층상속,상속시에 메모리는 어떻게 할당되는가?
옵저버: 다형성, 다형성을 이용한 객체들을 한꺼번에 관리하는 방법.
스테이트: 클래스가 서로 참조할때는 클래스의 선언과 멤버함수의 정의를 분리해야한다.
상속:
계층상속:
다중상속: 부모를 여러개 가지는 것.
다이아몬드상속의 문제점: 인터페이스는 멤버변수를 가질 수 없음.
다형성: 부모의 포인터에 자식의 객체를 할당한다.(동적할당)
가상함수:
순수가상함수:
추상클래스:
인터페이스:
동적바인딩: 함수포인터
가상함수테이블(vptr): 다형성(가상함수), 동적바인딩, 함수포인터

운영체제
프로세스:
스레드:
테스크:
잡스케쥴러:
레이스컨디션:
메시지큐:
베리어락:
오버헤드:
컨텍스트스위칭:


