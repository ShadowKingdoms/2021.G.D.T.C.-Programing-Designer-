1. 플랫폼 프로그래밍
플랫폼 - 어떤 서비스를 이용하는데 기반이 되는 서비스.
ex) 서비스 - 카카오톡, 당근마켓, 토스
    운영체제 - Windows, Android(Linux),OSX,iOS(Unix)
	게임 - 콘솔기기,OS,엔진...
	웹?
  
플랫폼? 하드웨어, 터치스크린, 키보드, 조이패드 
시장적(플랫폼) - 기기사용자들의 접근성이 다르다. (기본으로 제공되지않음)
프로그래밍적(플랫폼) - 운영제제를 통해서 OS의 기능에 접근하는것.

가상머신: 운영체제위에서 API의 작동을 운영체제에 맞도록 도와줌. 
즉, 운영체제를 신경쓰지않고 프로그래밍가능. ex)Java,.NET 
운영체제? WinAPI, MFC, Winform, AndroidAPI -> 메세지를 통해 
API: App programing interface. ex) 자료구조 API(STL,컬렉션)
게임(3D)엔진: 게임의 요소를 개발하기 쉽도록 제공되는 다양한 기능을 포함한 소프트웨어 

안드로이드와 윈도우에서 게임의 차이점?
조작 -> 하드웨어
구글연동 -> 웹(통신규격을 통해서 다른 플랫폼에서 기능을 작동시킨다.)

게임플랫폼의 변천사 
해외 - 엔진개발에 강함. -> 게임프로그래밍
콘솔기기(PC) -> AAA급게임 -> 네트워크X -> 8,16bit게임기

한국 - 네트워크게임에 강함. -> 네트워크프로그래밍
한국에 I
PC게임 -> 불법복제문제로 많은 회사들이 망했다. -> 학생들이 주요 타겟 -> 돈X
온라인게임 -> 바람의나라.. (PC) -> DX(90~) OpenGL
ex)엘소드, 테런, 메이플, 던파, 마비노기....

스마트폰의 등장
유니티엔진 -> 멀티플랫폼빌드를 지원
10~11사이
펄어비스 검은사막엔진을 발전시켜나감. 사용자의 경험이 다른가?X
슈퍼크리에이티브 유나엔진 모바일만 최적화. 사용자의 경험성을 개선.
10년 지남.

참고: 언리얼이 그래픽이 좋다? -> 노드기반 쉐이더프로그래밍을 지원함.

에셋을 사용해서라도 게임을 개발할수있으면된다. -> 그러나 프로그래머는 이것만 가지고 사람을 채용하지않는다.

안드로이드에서만 되는 고유기능은 플랫폼으로 볼수있다.O
안드로이드나 ios에서 공통적으로 가능한 기능은 크로스플랫폼이다.X
대부분이런 기능은 구글파이어베이스를 통해 지원하므로, 따로 파이어베이스SDK를 설치하고, API사용방법을 배워야한다.
※Software Deveploment Kit

대기업 퍼블리싱기술개발 부서가 따로있다.
중소기업 X <- 결국 프로그래머가하게된다.

국비프로젝트 진행하는데 키넥트를 연동하지못해서 프로젝트 실패 
-> 프로그래머가 유니티밖에 할줄몰랐음.
대부분의 스타트업이 기술자가 없음. CEO가 엔지니어출신. 
-> 그러므로 전공지식이 꼭 필요하다! 지금몰라도 나중에 찾아서 공부할수있어야한다!
실무는 시간을 지켜야한다. 
